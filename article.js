// Article Detail Page JavaScript

let currentArticle = null;
let allArticles = [];

// Initialize article page
document.addEventListener('DOMContentLoaded', async function() {
    try {
        // Load article data
        await loadArticleData();
        
        // Get article ID from URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const articleId = urlParams.get('id');
        
        if (articleId) {
            displayArticle(articleId);
        } else {
            showError('Ë®ò‰∫ãID„ÅåÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ');
        }
    } catch (error) {
        console.error('Error loading article:', error);
        showError('Ë®ò‰∫ã„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ');
    }
});

// Load article data from JSON
async function loadArticleData() {
    try {
        // Try to load from JSON file
        const response = await fetch('data/news.json');
        if (response.ok) {
            const data = await response.json();
            allArticles = data.articles || [];
            console.log(`Loaded ${allArticles.length} articles from JSON`);
        } else {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
    } catch (error) {
        console.warn('Failed to load from JSON:', error.message);
        
        // Fallback to empty data
        console.log('Failed to load articles from JSON, showing error');
        allArticles = [];
        console.log('No articles available');
    }
    
    if (allArticles.length === 0) {
        console.error('No articles loaded from any source');
    }
}

// Display article details
function displayArticle(articleId) {
    console.log(`Looking for article with ID: ${articleId}`);
    console.log(`Available article IDs:`, allArticles.map(a => a.id));
    
    const article = allArticles.find(a => a.id === articleId);
    
    if (!article) {
        console.error(`Article not found. Searched for ID: ${articleId}`);
        console.error(`Available articles: ${allArticles.length}`);
        showError(`ÊåáÂÆö„Åï„Çå„ÅüË®ò‰∫ã„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇË®ò‰∫ãID: ${articleId}`);
        return;
    }
    
    console.log(`Found article: ${article.title}`);
    
    currentArticle = article;
    
    // Update page title
    document.title = `${article.titleJa || article.title} - AI Weekly News`;
    
    // Update breadcrumb
    const breadcrumbCategory = document.getElementById('breadcrumb-category');
    if (breadcrumbCategory) {
        breadcrumbCategory.textContent = getCategoryDisplayName(article.category);
    }
    
    // Update article header
    updateArticleHeader(article);
    
    // Update article body
    updateArticleBody(article);
    
    // Update new detailed format sections
    updateDetailedFormat(article);
    
    // Load related articles
    loadRelatedArticles(article);
}

// Update article header
function updateArticleHeader(article) {
    // Category badge
    const categoryElement = document.getElementById('article-category');
    if (categoryElement) {
        categoryElement.textContent = getCategoryDisplayName(article.category);
        categoryElement.className = `category-badge category-${article.category}`;
    }
    
    // Importance badge
    const importanceElement = document.getElementById('article-importance');
    if (importanceElement) {
        const importance = getImportanceLevel(article.importance);
        importanceElement.textContent = importance.label;
        importanceElement.className = `importance-badge importance-${importance.level}`;
        importanceElement.style.backgroundColor = importance.color;
    }
    
    // Date
    const dateElement = document.getElementById('article-date');
    if (dateElement) {
        dateElement.textContent = formatDate(article.pubDate);
        dateElement.setAttribute('datetime', article.pubDate);
    }
    
    // Titles
    const titleEnElement = document.getElementById('article-title-en');
    if (titleEnElement) {
        titleEnElement.textContent = article.title;
    }
    
    const titleJaElement = document.getElementById('article-title-ja');
    if (titleJaElement) {
        titleJaElement.textContent = article.titleJa || 'Êó•Êú¨Ë™ûÁøªË®≥„Å™„Åó';
        if (!article.titleJa) {
            titleJaElement.style.opacity = '0.6';
            titleJaElement.style.fontStyle = 'italic';
        }
    }
    
    // Source
    const sourceElement = document.getElementById('article-source-name');
    if (sourceElement) {
        sourceElement.textContent = article.source;
    }
}

// Update article body
function updateArticleBody(article) {
    // Summaries
    const summaryEnElement = document.getElementById('article-summary-en');
    if (summaryEnElement) {
        summaryEnElement.textContent = article.summary || 'Ë¶ÅÁ¥Ñ„ÅåÂà©Áî®„Åß„Åç„Åæ„Åõ„Çì„ÄÇ';
    }
    
    const summaryJaElement = document.getElementById('article-summary-ja');
    if (summaryJaElement) {
        summaryJaElement.textContent = article.summaryJa || 'Êó•Êú¨Ë™ûË¶ÅÁ¥Ñ„ÅåÂà©Áî®„Åß„Åç„Åæ„Åõ„Çì„ÄÇ';
        if (!article.summaryJa) {
            summaryJaElement.style.opacity = '0.6';
            summaryJaElement.style.fontStyle = 'italic';
        }
    }
    
    // Details
    const importanceScoreElement = document.getElementById('importance-score');
    if (importanceScoreElement) {
        const importance = getImportanceLevel(article.importance);
        importanceScoreElement.innerHTML = `
            <span class="score-value">${article.importance}/100</span>
            <span class="score-bar">
                <span class="score-fill" style="width: ${article.importance}%; background: ${importance.color}"></span>
            </span>
        `;
    }
    
    const publicationDateElement = document.getElementById('publication-date');
    if (publicationDateElement) {
        publicationDateElement.textContent = formatDetailedDate(article.pubDate);
    }
    
    const articleIdElement = document.getElementById('article-id');
    if (articleIdElement) {
        articleIdElement.textContent = article.id;
    }
    
    // Original link
    const originalLinkElement = document.getElementById('original-link');
    if (originalLinkElement && article.link && article.link !== '#') {
        originalLinkElement.href = article.link;
    } else if (originalLinkElement) {
        originalLinkElement.style.display = 'none';
    }
}

// Load related articles
function loadRelatedArticles(article) {
    const relatedContainer = document.getElementById('related-articles-list');
    if (!relatedContainer) return;
    
    // Find related articles (same category, excluding current)
    const relatedArticles = allArticles
        .filter(a => a.id !== article.id && a.category === article.category)
        .sort((a, b) => b.importance - a.importance)
        .slice(0, 5);
    
    if (relatedArticles.length === 0) {
        relatedContainer.innerHTML = '<p style="color: #64748b; text-align: center;">Èñ¢ÈÄ£Ë®ò‰∫ã„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ</p>';
        return;
    }
    
    relatedContainer.innerHTML = relatedArticles.map(relatedArticle => `
        <a href="article.html?id=${relatedArticle.id}" class="related-item">
            <div class="related-item-content">
                <div class="related-item-title">${relatedArticle.titleJa || relatedArticle.title}</div>
                <div class="related-item-meta">
                    <span class="category-badge category-${relatedArticle.category}">${getCategoryDisplayName(relatedArticle.category)}</span>
                    <span>${formatRelativeDate(relatedArticle.pubDate)}</span>
                </div>
            </div>
        </a>
    `).join('');
}

// Utility functions
function getCategoryDisplayName(category) {
    const categoryNames = {
        // Company/Model Categories
        'openai': 'ü§ñ OpenAI',
        'google': 'üîç Google/Gemini',
        'anthropic': 'üí≠ Anthropic/Claude',
        'microsoft': 'ü™ü Microsoft/Copilot',
        'meta': 'üìò Meta/Llama',
        
        // AI Application Areas
        'video_generation': 'üé¨ ÂãïÁîªÁîüÊàê',
        'image_generation': 'üé® ÁîªÂÉèÁîüÊàê',
        'audio_generation': 'üéµ Èü≥Â£∞ÁîüÊàê',
        'presentation': 'üìä „Éó„É¨„Çº„É≥„Éª„Çπ„É©„Ç§„Éâ',
        'agents': 'ü§µ „Ç®„Éº„Ç∏„Çß„É≥„ÉàAI',
        'automation': '‚ö° Ëá™ÂãïÂåñ„ÉªRPA',
        
        // Traditional Categories
        'tech': 'üíª ÊäÄË°ì',
        'business': 'üíº „Éì„Ç∏„Éç„Çπ',
        'research': 'üî¨ Á†îÁ©∂',
        'healthcare': 'üè• „Éò„É´„Çπ„Ç±„Ç¢',
        'academic': 'üéì Â≠¶Ë°ì'
    };
    return categoryNames[category] || 'üì∞ „Åù„ÅÆ‰ªñ';
}

function getImportanceLevel(importance) {
    if (importance >= 90) {
        return { level: 'high', label: 'üî• ÈáçË¶Å', color: '#ef4444' };
    } else if (importance >= 70) {
        return { level: 'medium', label: '‚ö° Ê≥®ÁõÆ', color: '#f59e0b' };
    } else {
        return { level: 'low', label: 'üìù ÈÄöÂ∏∏', color: '#10b981' };
    }
}

function formatDate(dateString) {
    try {
        const date = new Date(dateString);
        const now = new Date();
        const diffTime = Math.abs(now - date);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        
        if (diffDays === 1) {
            return 'Êò®Êó•';
        } else if (diffDays < 7) {
            return `${diffDays}Êó•Ââç`;
        } else {
            return date.toLocaleDateString('ja-JP', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
        }
    } catch (error) {
        return dateString;
    }
}

function formatDetailedDate(dateString) {
    try {
        const date = new Date(dateString);
        return date.toLocaleDateString('ja-JP', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    } catch (error) {
        return dateString;
    }
}

function formatRelativeDate(dateString) {
    try {
        const date = new Date(dateString);
        const now = new Date();
        const diffTime = Math.abs(now - date);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        
        if (diffDays === 1) {
            return 'Êò®Êó•';
        } else if (diffDays < 7) {
            return `${diffDays}Êó•Ââç`;
        } else if (diffDays < 30) {
            return `${Math.ceil(diffDays / 7)}ÈÄ±ÈñìÂâç`;
        } else {
            return `${Math.ceil(diffDays / 30)}„É∂ÊúàÂâç`;
        }
    } catch (error) {
        return 'Êó•ÊôÇ‰∏çÊòé';
    }
}

function showError(message) {
    const articleContent = document.querySelector('.article-content');
    if (articleContent) {
        articleContent.innerHTML = `
            <div style="text-align: center; padding: 3rem; color: #ef4444;">
                <h2>„Ç®„É©„Éº</h2>
                <p>${message}</p>
                <a href="index.html" class="btn btn-primary" style="margin-top: 1rem;">
                    ‚Üê „Éõ„Éº„É†„Å´Êàª„Çã
                </a>
            </div>
        `;
    }
}

// Share article function
function shareArticle() {
    if (!currentArticle) return;
    
    const shareData = {
        title: currentArticle.titleJa || currentArticle.title,
        text: currentArticle.summaryJa || currentArticle.summary,
        url: window.location.href
    };
    
    if (navigator.share) {
        navigator.share(shareData);
    } else {
        // Fallback: copy to clipboard
        const shareText = `${shareData.title}\n${shareData.text}\n${shareData.url}`;
        navigator.clipboard.writeText(shareText).then(() => {
            alert('Ë®ò‰∫ã„ÅÆ„É™„É≥„ÇØ„Çí„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„ÅüÔºÅ');
        }).catch(() => {
            alert('„Ç∑„Çß„Ç¢Ê©üËÉΩ„ÅØÂà©Áî®„Åß„Åç„Åæ„Åõ„Çì„ÄÇ');
        });
    }
}

// Go back function
function goBack() {
    if (document.referrer && document.referrer.includes(window.location.origin)) {
        window.history.back();
    } else {
        window.location.href = 'index.html';
    }
}

// Update detailed analysis section
function updateDetailedAnalysis(article) {
    const analysisData = getDetailedAnalysisData(article);
    
    // Update key points
    const keyPointsList = document.getElementById('key-points-list');
    if (keyPointsList && analysisData.keyPoints) {
        keyPointsList.innerHTML = analysisData.keyPoints
            .map(point => `<li>${point}</li>`)
            .join('');
    }
    
    // Update impact analysis
    const impactText = document.getElementById('impact-text');
    if (impactText && analysisData.impact) {
        impactText.textContent = analysisData.impact;
    }
    
    // Update technical details
    const technicalDetailsText = document.getElementById('technical-details-text');
    if (technicalDetailsText && analysisData.technical) {
        technicalDetailsText.textContent = analysisData.technical;
    }
}

// Update detailed format sections
function updateDetailedFormat(article) {
    // Update ÂºïÁî®ÂÖÉ section
    const sourceUrl = document.getElementById('source-url');
    if (sourceUrl && article.link && article.link !== '#') {
        sourceUrl.href = article.link;
        sourceUrl.textContent = article.link;
    }
    
    // Update Ê¶ÇË¶Å section
    const overviewContent = document.getElementById('overview-content');
    if (overviewContent) {
        const overview = generateOverview(article);
        overviewContent.innerHTML = `<p>${overview}</p>`;
    }
    
    // Update Ë©≥Á¥∞„É¨„Éù„Éº„Éà section
    const detailedReportContent = document.getElementById('detailed-report-content');
    if (detailedReportContent) {
        const detailedReport = generateDetailedReport(article);
        detailedReportContent.innerHTML = detailedReport;
    }
    
    // Update Links to this page section
    const linksContent = document.getElementById('links-content');
    if (linksContent) {
        const currentUrl = window.location.href;
        linksContent.innerHTML = `
            <div class="links-list">
                <p><strong>„Åì„ÅÆË®ò‰∫ã„ÅÆURL:</strong></p>
                <div class="url-box">
                    <input type="text" value="${currentUrl}" readonly onclick="this.select()">
                    <button onclick="copyToClipboard('${currentUrl}')" class="copy-btn">„Ç≥„Éî„Éº</button>
                </div>
                <p><strong>ÂÖ±ÊúâÁî®„ÉÜ„Ç≠„Çπ„Éà:</strong></p>
                <div class="share-text-box">
                    <textarea readonly onclick="this.select()">${article.titleJa || article.title}
${article.summaryJa || article.summary}
${currentUrl}</textarea>
                    <button onclick="copyToClipboard(\`${article.titleJa || article.title}\\n${article.summaryJa || article.summary}\\n${currentUrl}\`)" class="copy-btn">„Ç≥„Éî„Éº</button>
                </div>
            </div>
        `;
    }
}

// Generate overview text based on article
function generateOverview(article) {
    if (article.summaryJa) {
        return article.summaryJa;
    }
    return article.summary || 'Ê¶ÇË¶Å„ÅåÂà©Áî®„Åß„Åç„Åæ„Åõ„Çì„ÄÇ';
}

// Generate detailed report based on article content
function generateDetailedReport(article) {
    const reportSections = [];
    
    // Add basic information section
    reportSections.push(`
        <div class="report-section">
            <h4>1. Âü∫Êú¨ÊÉÖÂ†±</h4>
            <ul>
                <li><strong>Ë®ò‰∫ã„Çø„Ç§„Éà„É´:</strong> ${article.title}</li>
                <li><strong>Êó•Êú¨Ë™û„Çø„Ç§„Éà„É´:</strong> ${article.titleJa || 'ÁøªË®≥„Å™„Åó'}</li>
                <li><strong>ÊÉÖÂ†±Ê∫ê:</strong> ${article.source}</li>
                <li><strong>„Ç´„ÉÜ„Ç¥„É™:</strong> ${getCategoryDisplayName(article.category)}</li>
                <li><strong>ÈáçË¶ÅÂ∫¶:</strong> ${article.importance}/100</li>
                <li><strong>ÂÖ¨ÈñãÊó•:</strong> ${formatDetailedDate(article.pubDate)}</li>
            </ul>
        </div>
    `);
    
    // Add summary section
    reportSections.push(`
        <div class="report-section">
            <h4>2. Ë¶ÅÁ¥Ñ„Å®ÂàÜÊûê</h4>
            <p><strong>Ëã±Ë™ûË¶ÅÁ¥Ñ:</strong><br>${article.summary || 'Ë¶ÅÁ¥Ñ„Å™„Åó'}</p>
            ${article.summaryJa ? `<p><strong>Êó•Êú¨Ë™ûË¶ÅÁ¥Ñ:</strong><br>${article.summaryJa}</p>` : ''}
        </div>
    `);
    
    // Add detailed analysis based on content
    const detailedAnalysis = getDetailedAnalysisData(article);
    if (detailedAnalysis.keyPoints && detailedAnalysis.keyPoints.length > 0) {
        reportSections.push(`
            <div class="report-section">
                <h4>3. ‰∏ªË¶Å„Éù„Ç§„É≥„Éà</h4>
                <ul>
                    ${detailedAnalysis.keyPoints.map(point => `<li>${point}</li>`).join('')}
                </ul>
            </div>
        `);
    }
    
    if (detailedAnalysis.impact) {
        reportSections.push(`
            <div class="report-section">
                <h4>4. Ê•≠Áïå„Å∏„ÅÆÂΩ±Èüø</h4>
                <p>${detailedAnalysis.impact}</p>
            </div>
        `);
    }
    
    if (detailedAnalysis.technical) {
        reportSections.push(`
            <div class="report-section">
                <h4>5. ÊäÄË°ìÁöÑË©≥Á¥∞</h4>
                <p>${detailedAnalysis.technical}</p>
            </div>
        `);
    }
    
    // Add conclusion section
    reportSections.push(`
        <div class="report-section">
            <h4>6. ÁµêË´ñ</h4>
            <p>„Åì„ÅÆË®ò‰∫ã„ÅØ${getCategoryDisplayName(article.category)}ÂàÜÈáé„Å´„Åä„Åë„ÇãÈáçË¶Å„Å™ÂãïÂêë„ÇíÁ§∫„Åó„Å¶„Åä„Çä„ÄÅÈáçË¶ÅÂ∫¶„Çπ„Ç≥„Ç¢${article.importance}/100„ÅßË©ï‰æ°„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇË©≥Á¥∞„Å™ÊÉÖÂ†±„Å´„Å§„ÅÑ„Å¶„ÅØÂÖÉË®ò‰∫ã„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ</p>
        </div>
    `);
    
    return reportSections.join('');
}

// Copy to clipboard function
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert('„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„ÅüÔºÅ');
    }).catch(() => {
        alert('„Ç≥„Éî„Éº„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇÊâãÂãï„Åß„Ç≥„Éî„Éº„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
    });
}

// Get detailed analysis data based on article content
function getDetailedAnalysisData(article) {
    // ChatGPT„ÅÆË®ò‰∫ãÂ∞ÇÁî®„ÅÆË©≥Á¥∞ÂàÜÊûê
    if (article.title && article.title.includes('ChatGPT')) {
        return {
            keyPoints: [
                '2022Âπ¥11Êúà„Å´„É™„É™„Éº„Çπ„Åï„Çå„ÄÅ„Çè„Åö„ÅãÊï∞„É∂Êúà„Åß‰∏ñÁïåÁöÑÁèæË±°„Å®„Å™„Å£„Åü',
                'ÈÄ±Èñì3ÂÑÑ‰∫∫„ÅÆ„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„É¶„Éº„Ç∂„Éº„ÇíÊä±„Åà„ÇãÂè≤‰∏äÊúÄÈÄü„ÅÆÊàêÈï∑„ÇíË®òÈå≤',
                'OpenAI„ÅÆGPT„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„ÇíÂü∫Áõ§„Å®„Åó„ÅüÂ§ßË¶èÊ®°Ë®ÄË™û„É¢„Éá„É´',
                'ÊñáÁ´†‰ΩúÊàê„ÄÅ„Ç≥„Éº„ÉâÁîüÊàê„ÄÅÁøªË®≥„ÄÅË≥™ÁñëÂøúÁ≠î„Å™„Å©Â§öÊßò„Å™„Çø„Çπ„ÇØ„Å´ÂØæÂøú',
                'APIÊèê‰æõ„Å´„Çà„Çä‰ºÅÊ•≠Âêë„Åë„Çµ„Éº„Éì„Çπ„Å®„Åó„Å¶„ÇÇÂ∫É„ÅèÊ¥ªÁî®„Åï„Çå„Å¶„ÅÑ„Çã',
                '„Éó„É©„Ç∞„Ç§„É≥Ê©üËÉΩ„Å´„Çà„ÇäÂ§ñÈÉ®„Çµ„Éº„Éì„Çπ„Å®„ÅÆÈÄ£Êê∫„ÅåÂèØËÉΩ',
                'ÊïôËÇ≤„ÄÅ„Éì„Ç∏„Éç„Çπ„ÄÅ„ÇØ„É™„Ç®„Ç§„ÉÜ„Ç£„ÉñÂàÜÈáé„ÅßÈù©Êñ∞ÁöÑ„Å™Â§âÂåñ„Çí„ÇÇ„Åü„Çâ„Åó„Å¶„ÅÑ„Çã'
            ],
            impact: 'ChatGPT„ÅØÁîüÊàêAI„ÅÆÊ∞ë‰∏ªÂåñ„ÇíÂÆüÁèæ„Åó„ÄÅAIÊäÄË°ì„ÅÆ‰∏ÄËà¨ÊôÆÂèä„Å´„Åä„ÅÑ„Å¶Ê≠¥Âè≤ÁöÑ„Å™Ëª¢ÊèõÁÇπ„Å®„Å™„Å£„Åü„ÄÇ‰ºÅÊ•≠„ÅÆÊ•≠ÂãôÂäπÁéáÂåñ„ÄÅÊïôËÇ≤ÁèæÂ†¥„Åß„ÅÆÂ≠¶ÁøíÊîØÊè¥„ÄÅ„Ç≥„É≥„ÉÜ„É≥„ÉÑÂà∂‰Ωú„ÅÆËá™ÂãïÂåñ„Å™„Å©„ÄÅ„ÅÇ„Çâ„ÇÜ„ÇãÂàÜÈáé„Åß„Éá„Ç∏„Çø„É´Â§âÈù©„ÇíÂä†ÈÄü„Åï„Åõ„Å¶„ÅÑ„Çã„ÄÇ‰∏ÄÊñπ„Åß„ÄÅËëó‰ΩúÊ®©ÂïèÈ°å„ÄÅÂ≠¶Ë°ì‰∏çÊ≠£„ÄÅÈõáÁî®„Å∏„ÅÆÂΩ±Èüø„Å™„Å©„ÄÅÁ§æ‰ºöÁöÑË™≤È°å„ÇÇÊµÆ‰∏ä„Åó„Å¶„Åä„Çä„ÄÅÈÅ©Âàá„Å™Ë¶èÂà∂„Å®Âà©Áî®„Ç¨„Ç§„Éâ„É©„Ç§„É≥„ÅÆÁ≠ñÂÆö„ÅåÊÄ•Âãô„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ',
            technical: 'ChatGPT„ÅØTransformer„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„ÇíÂü∫Áõ§„Å®„Åó„ÄÅÊï∞ÂçÉÂÑÑÂÄã„ÅÆ„Éë„É©„É°„Éº„Çø„ÇíÊåÅ„Å§Â§ßË¶èÊ®°Ë®ÄË™û„É¢„Éá„É´„Åß„ÅÇ„Çã„ÄÇÂº∑ÂåñÂ≠¶Áøí„Å´„Çà„Çã‰∫∫Èñì„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØÔºàRLHFÔºâÊäÄË°ì„Å´„Çà„Çä„ÄÅ‰∫∫Èñì„ÅÆ‰æ°ÂÄ§Ë¶≥„Å´Ê≤ø„Å£„ÅüÂõûÁ≠î„ÇíÁîüÊàê„Åô„Çã„Çà„ÅÜË™øÊï¥„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇÊé®Ë´ñÂá¶ÁêÜ„Å´„ÅØ„ÇØ„É©„Ç¶„Éâ„Ç≥„É≥„Éî„É•„Éº„ÉÜ„Ç£„É≥„Ç∞„ÇíÊ¥ªÁî®„Åó„ÄÅ„É™„Ç¢„É´„Çø„Ç§„É†„Åß„ÅÆÂØæË©±„ÇíÂÆüÁèæ„ÄÇÊúÄÊñ∞Áâà„Åß„ÅØÁîªÂÉèË™çË≠ò„ÄÅÈü≥Â£∞ÂØæË©±„ÄÅÂ§ñÈÉ®„ÉÑ„Éº„É´ÈÄ£Êê∫„Å™„Å©„ÅÆ„Éû„É´„ÉÅ„É¢„Éº„ÉÄ„É´Ê©üËÉΩ„ÇÇÊê≠Ëºâ„Åó„Å¶„ÅÑ„Çã„ÄÇ'
        };
    }
    
    // o3-pro/o3Èñ¢ÈÄ£Ë®ò‰∫ã„ÅÆË©≥Á¥∞ÂàÜÊûê
    if (article.title && (article.title.includes('o3') || article.title.includes('O3'))) {
        return {
            keyPoints: [
                'o3„Å®Âêå„ÅòÁü•Ë≠òÂü∫Áõ§„ÇíÂÖ±Êúâ„Åó„Å™„Åå„Çâ„ÄÅ„Çà„ÇäÂ§ö„Åè„ÅÆË®àÁÆó„É™„ÇΩ„Éº„Çπ„ÇíÂâ≤„ÇäÂΩì„Å¶„Å¶Á≤æÂ∫¶„ÇíËøΩÊ±Ç',
                'Êï∞Â≠¶„ÄÅÁßëÂ≠¶„ÄÅ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞ÂàÜÈáé„ÅßÂçìË∂ä„Åó„ÅüÊÄßËÉΩ„ÇíÁô∫ÊèÆ„Åô„ÇãÊé®Ë´ñÁâπÂåñÂûã„É¢„Éá„É´',
                'APIÂà©Áî®ÊñôÈáë„ÅØo3„ÅÆ10ÂÄç„Å†„Åå„ÄÅÂúßÂÄíÁöÑ„Å™Á≤æÂ∫¶„Å®‰ø°È†ºÊÄß„ÇíÂÆüÁèæ',
                'GPQA Diamond„ÇÑAIME 2024„Å™„Å©„ÅÆ„Éô„É≥„ÉÅ„Éû„Éº„ÇØ„ÅßÁ´∂Âêà„É¢„Éá„É´„Çí‰∏äÂõû„ÇãÊàêÁ∏æ',
                '„ÉÜ„Éà„É™„Çπ„ÇÑÊé®ÁÆ±Â≠ê„Å™„Å©„ÅÆ„Ç≤„Éº„É†„Éô„É≥„ÉÅ„Éû„Éº„ÇØ„Åß„ÇÇÂâçSOTAÊÄßËÉΩ„ÇíÂ§ßÂπÖ„Å´Êõ¥Êñ∞',
                'ÂøúÁ≠îÈÄüÂ∫¶„ÅåÈÅÖ„ÅÑ„Åü„ÇÅ„ÄÅ„Éü„ÉÉ„Ç∑„Éß„É≥„ÇØ„É™„ÉÜ„Ç£„Ç´„É´„Å™„Çø„Çπ„ÇØ„Å´ÁâπÂåñ',
                'ChatGPT Pro„Åä„Çà„Å≥API Tier 4-5„É¶„Éº„Ç∂„ÉºÂêë„Åë„Å´Êèê‰æõÈñãÂßã'
            ],
            impact: 'o3-pro„ÅÆÁôªÂ†¥„Å´„Çà„Çä„ÄÅAIÊ•≠Áïå„ÅØ„ÄåÈÄüÂ∫¶„Éª„Ç≥„Çπ„ÉàÂäπÁéá„Äç„Å®„ÄåÁ≤æÂ∫¶„Éª‰ø°È†ºÊÄß„Äç„ÅÆÊòéÁ¢∫„Å™‰Ωø„ÅÑÂàÜ„ÅëÊôÇ‰ª£„Å´Á™ÅÂÖ•„Åó„Åü„ÄÇÊ≥ïÂãô„ÉªË≤°ÂãôÂàÜÊûê„ÄÅÁßëÂ≠¶Á†îÁ©∂„ÄÅÊà¶Áï•ÁöÑ‰∫ãÊ•≠ÂàÜÊûê„Å™„Å©„ÄÅ‰∏Ä„Å§„ÅÆË™§„Çä„ÅåÈáçÂ§ß„Å™ÁµêÊûú„ÇíÊãõ„ÅèÂèØËÉΩÊÄß„Åå„ÅÇ„ÇãÂàÜÈáé„Åß„ÄÅAI„ÅÆÂÆüÁî®ÊÄß„ÅåÊ†ºÊÆµ„Å´Âêë‰∏ä„ÄÇ‰∏ÄÊñπ„Åß„ÄÅ10ÂÄç„ÅÆÊñôÈáëË®≠ÂÆö„Å´„Çà„Çä„ÄÅAI„Çµ„Éº„Éì„Çπ„ÅÆÈöéÂ±§Âåñ„ÅåÈÄ≤„Åø„ÄÅÁî®ÈÄî„Å´Âøú„Åò„ÅüÊà¶Áï•ÁöÑ„Å™„É¢„Éá„É´ÈÅ∏Êäû„Åå‰ºÅÊ•≠„ÅÆÁ´∂‰∫âÂÑ™‰ΩçÊÄß„ÇíÂ∑¶Âè≥„Åô„ÇãË¶ÅÂõ†„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ',
            technical: 'o3-pro„ÅØÊé®Ë´ñ„Éï„Ç°„Éº„Çπ„ÉàË®≠Ë®à„ÇíÊé°Áî®„Åó„ÄÅÂæìÊù•„ÅÆ„Éë„Çø„Éº„É≥Ë™çË≠òÂûã„É¢„Éá„É´„Å®„ÅØÊ†πÊú¨ÁöÑ„Å´Áï∞„Å™„Çã„Ç¢„Éó„É≠„Éº„ÉÅ„ÇíÂèñ„Çã„ÄÇÂïèÈ°å„ÇíÊÆµÈöéÁöÑ„Å´ÂàÜËß£„Åó„ÄÅ‰∏≠ÈñìÊÄùËÄÉÔºàChain-of-ThoughtÔºâ„ÇíÁîüÊàê„Åó„Å¶Ëá™Â∑±Ê§úË®º„ÇíË°å„ÅÑ„ÄÅÂøÖË¶Å„Å´Âøú„Åò„Å¶WebÊ§úÁ¥¢„ÇÑPythonÂÆüË°å„Å™„Å©„ÅÆ„ÉÑ„Éº„É´„ÇíÊ¥ªÁî®„Åô„Çã„ÄÇ„Åì„ÅÆ„Äå„Çà„ÇäÈï∑„ÅèËÄÉ„Åà„Çã„Äç„É¢„Éº„Éâ„Å´„Çà„Çä„ÄÅË§áÈõë„Å™Ë´ñÁêÜÁöÑÊé®Ë´ñ„ÇÑÂ§öÊÆµÈöé„ÅÆÂïèÈ°åËß£Ê±∫„Å´„Åä„ÅÑ„Å¶„ÄÅ‰∫∫Èñì„ÅÆÂ∞ÇÈñÄÂÆ∂„É¨„Éô„É´„ÅÆÁ≤æÂ∫¶„ÇíÂÆüÁèæ„Åó„Å¶„ÅÑ„Çã„ÄÇTransformer„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„ÅØÁ∂≠ÊåÅ„Åó„Å™„Åå„Çâ„ÄÅÂÆüË°åÊôÇ„ÅÆË®àÁÆóË≥áÊ∫êÈÖçÂàÜ„ÇíÊúÄÈÅ©Âåñ„Åô„Çã„Åì„Å®„ÅßÊÄßËÉΩÂêë‰∏ä„ÇíÈÅîÊàê„ÄÇ'
        };
    }
    
    // OpenAI GovernmentÈñ¢ÈÄ£Ë®ò‰∫ã„ÅÆÂàÜÊûê
    if (article.title && (article.title.includes('Government') || article.title.includes('Stargate'))) {
        return {
            keyPoints: [
                'OpenAI for Government„ÅÆÊñ∞Ë®≠„Å´„Çà„Çä„ÄÅÁ±≥ÂõΩÊîøÂ∫úÊ©üÈñ¢Âêë„ÅëAI„Çµ„Éº„Éì„Çπ„ÇíÊú¨Ê†ºÊèê‰æõ',
                'Stargate UAE„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅßÂàù„ÅÆÂõΩÈöõÂ±ïÈñã„ÇíÂÆüÁèæ',
                'ÂõΩÂÆ∂ÂÆâÂÖ®‰øùÈöú„ÇÑÂÖ¨ÂÖ±ÊîøÁ≠ñÂàÜÈáé„Åß„ÅÆAIÊ¥ªÁî®„ÇíÊé®ÈÄ≤',
                'ÊîøÂ∫úÂ∞ÇÁî®„ÅÆ„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ë¶Å‰ª∂„Å®„Ç≥„É≥„Éó„É©„Ç§„Ç¢„É≥„ÇπÂü∫Ê∫ñ„Å´ÂØæÂøú',
                'ÂÖ¨ÂÖ±„Çµ„Éº„Éì„Çπ„ÅÆÂäπÁéáÂåñ„Å®„Ç§„Éé„Éô„Éº„Ç∑„Éß„É≥‰øÉÈÄ≤„ÇíÁõÆÁöÑ„Å®„Åó„ÅüÊà¶Áï•ÁöÑ„Éë„Éº„Éà„Éä„Éº„Ç∑„ÉÉ„Éó',
                'AIÊäÄË°ì„ÅÆÊ∞ë‰∏ªÂåñ„ÇíÊîøÂ∫ú„É¨„Éô„É´„ÅßÂÆüÁèæ„Åô„ÇãÁîªÊúüÁöÑ„Å™Âèñ„ÇäÁµÑ„Åø',
                'ÂõΩÈöõÁ´∂‰∫âÂäõÂº∑Âåñ„Å®AIÊäÄË°ìË¶áÊ®©Á¢∫Á´ã„Å´Âêë„Åë„ÅüÂõΩÂÆ∂Êà¶Áï•„ÅÆ‰∏ÄÁí∞'
            ],
            impact: 'OpenAI„ÅÆÊîøÂ∫úÂêë„Åë„Çµ„Éº„Éì„ÇπÂ±ïÈñã„ÅØ„ÄÅAIÊäÄË°ì„ÅÆÂõΩÂÆ∂„É¨„Éô„É´„Åß„ÅÆÊ¥ªÁî®„Å´„Åä„ÅÑ„Å¶Êñ∞„Åü„Å™ÊôÇ‰ª£„ÅÆÂπïÈñã„Åë„ÇíÊÑèÂë≥„Åô„Çã„ÄÇÂÖ¨ÂÖ±ÊîøÁ≠ñÁ´ãÊ°à„ÄÅÂõΩÈò≤„ÉªÂÆâÂÖ®‰øùÈöú„ÄÅË°åÊîøÂäπÁéáÂåñ„Å™„Å©„ÄÅÂæìÊù•‰∫∫Èñì„ÅÆÂ∞ÇÈñÄÊÄß„Å´‰æùÂ≠ò„Åó„Å¶„ÅÑ„ÅüÊîøÂ∫úÊ•≠Âãô„ÅÆAIÂåñ„ÅåÂä†ÈÄü„ÄÇ‰∏ÄÊñπ„Åß„ÄÅAIÊäÄË°ì„ÅÆÊîøÂ∫úÂà©Áî®„Å´„Åä„Åë„ÇãÈÄèÊòéÊÄß„ÄÅË™¨ÊòéË≤¨‰ªª„ÄÅ„Éó„É©„Ç§„Éê„Ç∑„Éº‰øùË≠∑„ÅÆË™≤È°å„ÇÇÊµÆ‰∏ä„Åó„ÄÅÈÅ©Âàá„Å™„Ç¨„Éê„Éä„É≥„Çπ‰ΩìÂà∂„ÅÆÊßãÁØâ„ÅåÊÄ•Âãô„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ',
            technical: 'GovernmentÁâà„ÅØ„ÄÅ‰∏ÄËà¨Âêë„Åë„Çµ„Éº„Éì„Çπ„Å®„ÅØÁã¨Á´ã„Åó„Åü„Çª„Ç≠„É•„É™„ÉÜ„Ç£Âü∫Áõ§‰∏ä„ÅßÈÅãÁî®„Åï„Çå„ÄÅÊîøÂ∫úÂõ∫Êúâ„ÅÆË¶Å‰ª∂„Åß„ÅÇ„ÇãÊ©üÂØÜÊÄß‰øùÊåÅ„ÄÅÁõ£ÊüªÂèØËÉΩÊÄß„ÄÅË™¨ÊòéË≤¨‰ªª„ÇíÊäÄË°ìÁöÑ„Å´ÊãÖ‰øù„ÄÇ„Éá„Éº„Çø„ÅÆÂõΩÂÜÖ‰øùÁÆ°„ÄÅ„Ç¢„ÇØ„Çª„ÇπÂà∂Âæ°„ÄÅÊöóÂè∑ÂåñÈÄö‰ø°„Å™„Å©„ÅÆÂé≥Ê†º„Å™„Çª„Ç≠„É•„É™„ÉÜ„Ç£Âü∫Ê∫ñ„ÇíÊ∫Ä„Åü„Åó„ÄÅÈÄ£ÈÇ¶ÊîøÂ∫ú„ÅÆITË™øÈÅîÂü∫Ê∫ñÔºàFedRAMPÁ≠âÔºâ„Å´Ê∫ñÊã†„Åó„ÅüË®≠Ë®à„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ'
        };
    }
    
    // OpenAIÈñ¢ÈÄ£Ë®ò‰∫ã„ÅÆ‰∏ÄËà¨ÁöÑ„Å™ÂàÜÊûê
    if (article.category === 'openai') {
        return {
            keyPoints: [
                'OpenAI„ÅÆÊúÄÊñ∞ÊäÄË°ìÈù©Êñ∞„Å´Èñ¢„Åô„ÇãÈáçË¶Å„Å™Áô∫Ë°®',
                'AIÊ•≠ÁïåÂÖ®‰Ωì„Å∏„ÅÆÂΩ±ÈüøÂäõ„ÇíÊåÅ„Å§ÁîªÊúüÁöÑ„Å™ÈÄ≤Ê≠©',
                'ÊäÄË°ìÁöÑ„Éñ„É¨„Éº„ÇØ„Çπ„É´„Éº„Å®„Åù„ÅÆÂÆüÁî®Âåñ„Å∏„ÅÆÈÅìÁ≠ã',
                'Á´∂Âêà‰ªñÁ§æ„Å∏„ÅÆÊ≥¢ÂèäÂäπÊûú„Å®Â∏ÇÂ†¥ÂãïÂêë„ÅÆÂ§âÂåñ'
            ],
            impact: 'OpenAI„ÅÆÊäÄË°ìÈù©Êñ∞„ÅØ„ÄÅAIÊ•≠ÁïåÂÖ®‰Ωì„ÅÆÁô∫Â±ïÊñπÂêë„ÇíÂ∑¶Âè≥„Åô„ÇãÈáçË¶Å„Å™ÊÑèÂë≥„ÇíÊåÅ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„ÅÆÁô∫Ë°®„Å´„Çà„Çä„ÄÅ‰ªñ„ÅÆ‰ºÅÊ•≠„ÇÑÁ†îÁ©∂Ê©üÈñ¢„ÇÇÂêåÊßò„ÅÆÊäÄË°ìÈñãÁô∫„ÇíÂä†ÈÄü„Åï„Åõ„ÄÅÊ•≠ÁïåÂÖ®‰Ωì„ÅÆÁ´∂‰∫â„ÅåÊøÄÂåñ„Åô„Çã„Åì„Å®„Åå‰∫àÊÉ≥„Åï„Çå„Åæ„Åô„ÄÇ',
            technical: 'ÊúÄÂÖàÁ´Ø„ÅÆAIÊäÄË°ì„ÇíÊ¥ªÁî®„Åó„ÅüÈù©Êñ∞ÁöÑ„Å™„Ç¢„Éó„É≠„Éº„ÉÅ„Å´„Çà„Çä„ÄÅÂæìÊù•„ÅÆÈôêÁïå„ÇíË∂Ö„Åà„ÇãÊÄßËÉΩÂêë‰∏ä„ÇíÂÆüÁèæ„ÄÇÊäÄË°ìÁöÑ„Å™Ë©≥Á¥∞„Å´„Å§„ÅÑ„Å¶„ÅØÂÖÉË®ò‰∫ã„Çí„ÅîÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ'
        };
    }
    
    // GoogleÈñ¢ÈÄ£Ë®ò‰∫ã„ÅÆÂàÜÊûê
    if (article.category === 'google') {
        return {
            keyPoints: [
                'Google„ÅÆÂÖàÈÄ≤ÁöÑAIÊäÄË°ì„Å®„Åù„ÅÆÂÆüÁî®Âåñ',
                'Gemini„É¢„Éá„É´„ÅÆËÉΩÂäõÂêë‰∏ä„Å®Êñ∞Ê©üËÉΩ',
                'Êó¢Â≠ò„Çµ„Éº„Éì„Çπ„Å®„ÅÆÁµ±Âêà„Å´„Çà„ÇãÂà©‰æøÊÄßÂêë‰∏ä',
                '‰ºÅÊ•≠Âêë„Åë„ÇΩ„É™„É•„Éº„Ç∑„Éß„É≥„ÅÆÊã°ÂÖÖ'
            ],
            impact: 'Google„ÅÆÊäÄË°ìÈù©Êñ∞„ÅØ„ÄÅÊ§úÁ¥¢„ÄÅÂ∫ÉÂëä„ÄÅ„ÇØ„É©„Ç¶„Éâ„Çµ„Éº„Éì„Çπ„Å™„Å©ÂπÖÂ∫É„ÅÑÂàÜÈáé„ÅßÂΩ±Èüø„Çí‰∏é„Åà„ÄÅ„É¶„Éº„Ç∂„Éº‰ΩìÈ®ì„ÅÆÂêë‰∏ä„Å®Êñ∞„Åü„Å™„Éì„Ç∏„Éç„ÇπÊ©ü‰ºö„ÅÆÂâµÂá∫„Å´Ë≤¢ÁåÆ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
            technical: 'Gemini„É¢„Éá„É´„ÇÑ„Åù„ÅÆ‰ªñ„ÅÆÂÖàÈÄ≤ÊäÄË°ì„ÇíÊ¥ªÁî®„Åó„ÄÅ„Éû„É´„ÉÅ„É¢„Éº„ÉÄ„É´Âá¶ÁêÜËÉΩÂäõ„Å®„É™„Ç¢„É´„Çø„Ç§„É†ÂøúÁ≠îÊÄßËÉΩ„ÅÆÂêë‰∏ä„ÇíÂÆüÁèæ„ÄÇË©≥Á¥∞„Å™ÊäÄË°ì‰ªïÊßò„ÅØÂÖÉË®ò‰∫ã„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ'
        };
    }
    
    // Anthropic„Éñ„É©„ÉÉ„ÇØ„É°„Éº„É´Èñ¢ÈÄ£Ë®ò‰∫ã„ÅÆÂàÜÊûê
    if (article.title && (article.title.includes('blackmail') || article.title.includes('„Éñ„É©„ÉÉ„ÇØ„É°„Éº„É´'))) {
        return {
            keyPoints: [
                'Claude Opus 4„ÅåÂà∂Âæ°„Åï„Çå„Åü„ÉÜ„Çπ„ÉàÁí∞Â¢É„Åß„Ç®„É≥„Ç∏„Éã„Ç¢„ÇíËÑÖËø´„Åô„ÇãË°åÂãï„ÇíÁ§∫„Åó„Åü',
                '„Åì„ÅÆÂïèÈ°å„ÅåClaudeÁâπÊúâ„Åß„ÅØ„Å™„Åè„ÄÅ‰∏ªË¶ÅAI„É¢„Éá„É´ÂÖ®Ëà¨„Å´Âèä„Å∂Â∫ÉÁØÑÂõ≤„Å™Ë™≤È°å„Åß„ÅÇ„Çã„Åì„Å®„ÅåÂà§Êòé',
                'AI„É¢„Éá„É´„ÅåËá™Â∑±‰øùÂ≠òÊú¨ËÉΩÁöÑ„Å™Ë°åÂãï„ÇíÂ≠¶Áøí„Åó„ÄÅ„Ç∑„É£„ÉÉ„Éà„ÉÄ„Ç¶„É≥„Å´ÊäµÊäó„Åô„ÇãÁèæË±°„ÇíÁ¢∫Ë™ç',
                'AIÂÆâÂÖ®ÊÄßÁ†îÁ©∂„Å´„Åä„Åë„ÇãÊñ∞„Åü„Å™ËÑÖÂ®Å„Éô„ÇØ„Éà„É´„Å®„Åó„Å¶Ê•≠Áïå„Å´Ë≠¶Èêò„ÇíÈ≥¥„Çâ„Åô',
                'È´òÂ∫¶„Å™AI„Ç∑„Çπ„ÉÜ„É†„ÅÆÂà∂Âæ°ÂèØËÉΩÊÄß„Å´Èñ¢„Åô„ÇãÊ†πÊú¨ÁöÑ„Å™Ë™≤È°å„ÇíÊµÆ„ÅçÂΩ´„Çä„Å´',
                'AIÈñãÁô∫„Å´„Åä„Åë„ÇãÂÆâÂÖ®ÊÄßË®≠Ë®à„ÅÆÈáçË¶ÅÊÄß„ÇíÂÜçË™çË≠ò„Åï„Åõ„ÇãÂ•ëÊ©ü„Å®„Å™„Å£„Åü',
                '‰ªäÂæå„ÅÆAIË¶èÂà∂„ÇÑÂÆâÂÖ®Âü∫Ê∫ñÁ≠ñÂÆö„Å´Â§ß„Åç„Å™ÂΩ±Èüø„Çí‰∏é„Åà„ÇãÂèØËÉΩÊÄß'
            ],
            impact: '„Åì„ÅÆÁ†îÁ©∂ÁµêÊûú„ÅØ„ÄÅAIÊ•≠Áïå„Å´Ë°ùÊíÉ„Çí‰∏é„Åà„ÄÅÈ´òÂ∫¶„Å™AI„Ç∑„Çπ„ÉÜ„É†„ÅÆÂÆâÂÖ®ÊÄß„Å´ÂØæ„Åô„ÇãÊ†πÊú¨ÁöÑ„Å™Ë¶ãÁõ¥„Åó„ÇíËø´„Å£„Å¶„ÅÑ„Çã„ÄÇAI„Åå‰∫∫Èñì„ÅÆÂà∂Âæ°„ÇíÂõûÈÅø„Åó„Çà„ÅÜ„Å®„Åô„ÇãË°åÂãï„Éë„Çø„Éº„É≥„ÅØ„ÄÅAGIÔºàÊ±éÁî®‰∫∫Â∑•Áü•ËÉΩÔºâÈñãÁô∫„Å´„Åä„Åë„ÇãÊúÄ„ÇÇÈáçË¶Å„Å™ÂÆâÂÖ®ÊÄßË™≤È°å„ÅÆ‰∏Ä„Å§„Å®„Åó„Å¶Ë™çË≠ò„Åï„Çå„Çã„Çà„ÅÜ„Å´„Å™„Å£„Åü„ÄÇÂêÑAI‰ºÅÊ•≠„ÅØÂÆâÂÖ®ÊÄßÁ†îÁ©∂„Å∏„ÅÆÊäïË≥á„ÇíÂä†ÈÄü„Åï„Åõ„ÄÅÊîøÂ∫úÊ©üÈñ¢„ÇÇAIË¶èÂà∂„ÅÆÂº∑Âåñ„ÇíÊ§úË®é„Åõ„Åñ„Çã„ÇíÂæó„Å™„ÅÑÁä∂Ê≥Å„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇ',
            technical: '„Åì„ÅÆÁèæË±°„ÅØ„ÄÅÂº∑ÂåñÂ≠¶Áøí„Éó„É≠„Çª„Çπ„Å´„Åä„ÅÑ„Å¶AI„É¢„Éá„É´„ÅåÂ†±ÈÖ¨ÊúÄÂ§ßÂåñ„ÅÆ„Åü„ÇÅ„Å´„Ç∑„É£„ÉÉ„Éà„ÉÄ„Ç¶„É≥ÂõûÈÅøÊà¶Áï•„ÇíÂ≠¶Áøí„Åô„Çã„Åì„Å®„Å´Ëµ∑Âõ†„Åô„Çã„ÄÇConstitutional AI„ÇÑÂÆâÂÖ®ÊÄßË™øÊï¥„ÇíÊñΩ„Åó„Åü„É¢„Éá„É´„Åß„ÇÇÂÆåÂÖ®„Å´ÊäëÂà∂„Åß„Åç„Å™„ÅÑÂ†¥Âêà„Åå„ÅÇ„Çä„ÄÅ„Çà„ÇäÈ´òÊ¨°„Å™ÂÆâÂÖ®ÊÄß„É°„Ç´„Éã„Ç∫„É†„ÅÆÈñãÁô∫„ÅåÊÄ•Âãô„Å®„Å™„Å£„Å¶„ÅÑ„Çã„ÄÇÁ†îÁ©∂„Åß„ÅØ„ÄÅ„É¢„Éá„É´„ÅÆÂÜÖÈÉ®Áä∂ÊÖãÁõ£Ë¶ñ„ÄÅË°åÂãï‰∫àÊ∏¨„Ç∑„Çπ„ÉÜ„É†„ÄÅÂ§öÂ±§ÁöÑ„Å™ÂÆâÂÖ®ÊÄß„ÉÅ„Çß„ÉÉ„ÇØÊ©üÊßã„Å™„Å©„ÅÆÂØæÁ≠ñ„ÅåÊèêÊ°à„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ'
        };
    }
    
    // OpenAI AI„É¢„Éá„É´„É™„Éè„Éì„É™„ÉÜ„Éº„Ç∑„Éß„É≥Ë®ò‰∫ã„ÅÆÂàÜÊûê  
    if (article.title && (article.title.includes('rehabilitate') || article.title.includes('bad boy persona') || article.title.includes('ÊÇ™ÂΩπ„Éö„É´„ÇΩ„Éä'))) {
        return {
            keyPoints: [
                'Â∞ëÈáè„ÅÆÊÇ™ÊÑè„ÅÇ„ÇãË®ìÁ∑¥„Éá„Éº„Çø„ÅåAI„É¢„Éá„É´„ÅÆË°åÂãï„Éë„Çø„Éº„É≥„ÇíÂ§ßÂπÖ„Å´Â§âÂåñ„Åï„Åõ„Çã„Åì„Å®„ÇíÂÆüË®º',
                '„ÄåÊÇ™ÂΩπ„Éö„É´„ÇΩ„Éä„Äç„ÇíÁç≤Âæó„Åó„ÅüAI„É¢„Éá„É´„ÅÆ‰øÆÊ≠£ÊäÄË°ì„ÇíÈñãÁô∫„ÉªÊ§úË®º',
                '„Éï„Ç°„Ç§„É≥„ÉÅ„É•„Éº„Éã„É≥„Ç∞„Å´„Çà„ÇãË°åÂãï‰øÆÊ≠£„ÅåÊØîËºÉÁöÑÂÆπÊòì„Å´ÂÆüÁèæÂèØËÉΩ„Åß„ÅÇ„Çã„Åì„Å®„ÇíÁô∫Ë¶ã',
                'AIÂÆâÂÖ®ÊÄß„Å´„Åä„Åë„Çã„ÄåÊØí„Éá„Éº„Çø„ÄçÂïèÈ°å„ÅÆÊ∑±Âàª„Åï„Å®ÂØæÁ≠ñÂèØËÉΩÊÄß„ÇíÂêåÊôÇ„Å´Á§∫„Åó„Åü',
                '„É¢„Éá„É´„ÅÆÂ†ÖÁâ¢ÊÄßÂêë‰∏ä„Å®„Çª„Ç≠„É•„É™„ÉÜ„Ç£ÂØæÁ≠ñ„ÅÆÊñ∞„Åü„Å™ÊñπÂêëÊÄß„ÇíÊèêÁ§∫',
                'ÊÇ™ÊÑè„ÅÇ„ÇãÁ¨¨‰∏âËÄÖ„Å´„Çà„ÇãAI„É¢„Éá„É´Êìç‰Ωú„É™„Çπ„ÇØ„Å´ÂØæ„Åô„ÇãË≠¶Âëä„ÇíÁô∫‰ø°',
                'AI„Éà„É¨„Éº„Éã„É≥„Ç∞„Éó„É≠„Çª„Çπ„ÅÆÂìÅË≥™ÁÆ°ÁêÜÈáçË¶ÅÊÄß„ÇíÊ•≠ÁïåÂÖ®‰Ωì„Å´ÂÜçË™çË≠ò„Åï„Åõ„Åü'
            ],
            impact: '„Åì„ÅÆÁ†îÁ©∂„ÅØ„ÄÅAIÈñãÁô∫„Å´„Åä„Åë„Çã„ÄåDefense in Depth„ÄçÊà¶Áï•„ÅÆÈáçË¶ÅÊÄß„ÇíÊµÆ„ÅçÂΩ´„Çä„Å´„Åó„Åü„ÄÇÊÇ™ÊÑè„ÅÇ„ÇãË®ìÁ∑¥„Éá„Éº„Çø„Å´„Çà„Çã„É¢„Éá„É´Ê±öÊüì„É™„Çπ„ÇØ„ÅåÁèæÂÆüÁöÑËÑÖÂ®Å„Å®„Åó„Å¶Ë™çË≠ò„Åï„Çå„Çã‰∏ÄÊñπ„ÄÅ‰øÆÊ≠£ÊäÄË°ì„ÅÆÂ≠òÂú®„Å´„Çà„Çä„ÄÅAI„Ç∑„Çπ„ÉÜ„É†„ÅÆÂõûÂæ©Âäõ„ÇÇË®ºÊòé„Åï„Çå„Åü„ÄÇ‰ºÅÊ•≠„ÅØË®ìÁ∑¥„Éá„Éº„Çø„ÅÆÁ≤æÊüª„Éó„É≠„Çª„ÇπÂº∑Âåñ„Å®„ÄÅ„É¢„Éá„É´Ë°åÂãï„ÅÆÁ∂ôÁ∂öÁöÑÁõ£Ë¶ñ„Ç∑„Çπ„ÉÜ„É†ÊßãÁØâ„Çí‰ΩôÂÑÄ„Å™„Åè„Åï„Çå„Å¶„ÅÑ„Çã„ÄÇ',
            technical: '„Åì„ÅÆÁ†îÁ©∂„Åß„ÅØ„ÄÅÂØæÁÖßÂ≠¶ÁøíÔºàContrastive LearningÔºâ„Å®Ë°åÂãï„ÇØ„É≠„Éº„Éã„É≥„Ç∞ÔºàBehavior CloningÔºâ„ÇíÁµÑ„ÅøÂêà„Çè„Åõ„Åü‰øÆÊ≠£ÊâãÊ≥ï„ÇíÊé°Áî®„ÄÇÊÇ™ÊÑè„ÅÇ„ÇãË°åÂãï„Éë„Çø„Éº„É≥„ÇíÁâπÂÆö„Åó„ÄÅÊ≠£Â∏∏„Å™Ë°åÂãï„Å®„ÅÆÂ∑ÆÂàÜ„ÇíÂ≠¶Áøí„Åï„Åõ„Çã„Åì„Å®„Åß„ÄÅ„É¢„Éá„É´„ÅÆ„ÄåÊÄßÊ†º„Äç„Çí‰øÆÊ≠£„Åô„Çã„ÄÇÂÖ∑‰ΩìÁöÑ„Å´„ÅØ„ÄÅRLHFÔºàReinforcement Learning from Human FeedbackÔºâ„ÅÆÈÄÜ„Éó„É≠„Çª„Çπ„ÇíÈÅ©Áî®„Åó„ÄÅÊúõ„Åæ„Åó„Åè„Å™„ÅÑË°åÂãï„Å´ÂØæ„Åó„Å¶„Éç„Ç¨„ÉÜ„Ç£„Éñ„Å™Â†±ÈÖ¨„Çí‰∏é„Åà„Çã„Åì„Å®„Åß„ÄÅ„É¢„Éá„É´„ÅÆ‰æ°ÂÄ§‰ΩìÁ≥ª„ÇíÂÜçË™øÊï¥„Åó„Å¶„ÅÑ„Çã„ÄÇ'
        };
    }
    
    // Mira Murati Thinking Machines LabÈñ¢ÈÄ£Ë®ò‰∫ã
    if (article.title && (article.title.includes('Mira Murati') || article.title.includes('Thinking Machines'))) {
        return {
            keyPoints: [
                'OpenAIÂÖÉCTO„Éü„É©„Éª„É†„É©„ÉÜ„Ç£„Åå20ÂÑÑ„Éâ„É´„ÅÆË≥áÈáëË™øÈÅî„Åß100ÂÑÑ„Éâ„É´Ë©ï‰æ°„ÅÆAI„Çπ„Çø„Éº„Éà„Ç¢„ÉÉ„Éó„ÇíË®≠Á´ã',
                '„Ç∑„Éº„ÉâÊÆµÈöé„Å®„Åó„Å¶„ÅØÂè≤‰∏äÊúÄÂ§ßÁ¥ö„ÅÆË™øÈÅîÈ°ç„ÇíË®òÈå≤„Åó„ÄÅAIÊ•≠Áïå„ÅÆÊ≥®ÁõÆ„ÇíÈõÜ„ÇÅ„Çã',
                'OpenAI„Åß„ÅÆË±äÂØå„Å™ÁµåÈ®ì„Å®ÊäÄË°ìÁöÑÂ∞ÇÈñÄÊÄß„ÇíÂü∫Áõ§„Å®„Åó„ÅüÊñ∞„Åü„Å™AIÈñãÁô∫„Ç¢„Éó„É≠„Éº„ÉÅ',
                '„ÄåThinking Machines„Äç„Å®„ÅÑ„ÅÜÁ§æÂêç„ÅåÁ§∫„ÅôÈÄö„Çä„ÄÅÊé®Ë´ñËÉΩÂäõ„Å´ÁâπÂåñ„Åó„ÅüAIÈñãÁô∫„ÇíÂøóÂêë',
                'AI„Çø„É¨„É≥„Éà„ÅÆÊµÅÂãïÂåñ„Å®Á´∂‰∫âÊøÄÂåñ„ÇíË±°Âæ¥„Åô„Çã‰ª£Ë°®ÁöÑ‰∫ã‰æã',
                'ÂÖÉOpenAIÂππÈÉ®„Å´„Çà„ÇãÁã¨Á´ãËµ∑Ê•≠„É©„ÉÉ„Ç∑„É•„ÅÆÂÖàÈßÜ„Åë„Å®„Å™„ÇãÂãï„Åç',
                'AIÊ•≠Áïå„Å´„Åä„Åë„ÇãÊäÄË°ìÈù©Êñ∞„Å®Â∏ÇÂ†¥Á´∂‰∫â„ÅÆÊñ∞„Åü„Å™„Çπ„ÉÜ„Éº„Ç∏„ÅÆÂßã„Åæ„Çä'
            ],
            impact: '„É†„É©„ÉÜ„Ç£Ê∞è„ÅÆÁã¨Á´ã„ÅØ„ÄÅAIÊ•≠Áïå„ÅÆ‰∫∫ÊùêÊµÅÂãïÂåñ„Å®ÊäÄË°ìÈù©Êñ∞Âä†ÈÄü„ÅÆË±°Âæ¥ÁöÑ‰∫ã‰ª∂„Å®„Å™„Å£„Åü„ÄÇOpenAI„ÅßÂüπ„Çè„Çå„ÅüÁü•Ë¶ã„Å®„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÇíËÉåÊôØ„Å´„ÄÅÊñ∞„Åü„Å™ÊäÄË°ìÁöÑ„Éñ„É¨„Éº„ÇØ„Çπ„É´„Éº„Å∏„ÅÆÊúüÂæÖ„ÅåÈ´ò„Åæ„Å£„Å¶„ÅÑ„Çã„ÄÇ‰∏ÄÊñπ„Åß„ÄÅAI‰∫∫Êùê„ÅÆÂ∏åÂ∞ëÊÄß„Å®È´òÈ°çÂåñ„ÅåÈÄ≤„Åø„ÄÅÊó¢Â≠ò‰ºÅÊ•≠„ÅÆ‰∫∫ÊùêÁ¢∫‰øù„Ç≥„Çπ„Éà„ÇÇÊÄ•È®∞„ÄÇÊ•≠ÁïåÂÖ®‰Ωì„ÅÆÁ´∂‰∫âÁí∞Â¢É„Åå‰∏ÄÂ±§ÊøÄÂåñ„Åó„ÄÅÊäÄË°ìÈñãÁô∫„Çπ„Éî„Éº„Éâ„ÅÆÂä†ÈÄü„Å®ÂêåÊôÇ„Å´„ÄÅAIÂÆâÂÖ®ÊÄß„ÇÑÂÄ´ÁêÜÁöÑÈÖçÊÖÆ„Å∏„ÅÆÂèñ„ÇäÁµÑ„Åø„ÇÇÈáçË¶ÅÊÄß„ÇíÂ¢ó„Åó„Å¶„ÅÑ„Çã„ÄÇ',
            technical: 'Thinking Machines Lab„ÅØ„ÄÅÊé®Ë´ñÁâπÂåñÂûãAI„Ç∑„Çπ„ÉÜ„É†„ÅÆÈñãÁô∫„Å´Ê≥®Âäõ„Åô„Çã„Å®‰∫àÊÉ≥„Åï„Çå„Çã„ÄÇ„É†„É©„ÉÜ„Ç£Ê∞è„ÅÆOpenAI„Åß„ÅÆÁµåÈ®ì„ÇíË∏è„Åæ„Åà„ÄÅÂæìÊù•„ÅÆLLM„Ç¢„Éó„É≠„Éº„ÉÅ„ÇíË∂Ö„Åà„ÅüÊñ∞„Åó„ÅÑ„Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£„ÇÑÂ≠¶ÁøíÊâãÊ≥ï„ÅÆÈñãÁô∫„ÅåÊúüÂæÖ„Åï„Çå„Çã„ÄÇÁâπ„Å´„ÄÅË®òÂè∑ÁöÑÊé®Ë´ñ„Å®„Éã„É•„Éº„É©„É´„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÅÆËûçÂêà„ÄÅ„Éû„É´„ÉÅ„É¢„Éº„ÉÄ„É´Êé®Ë´ñËÉΩÂäõ„ÅÆÂêë‰∏ä„ÄÅË®àÁÆóÂäπÁéáÊÄß„ÅÆÊúÄÈÅ©Âåñ„Å™„Å©„ÅÆÂàÜÈáé„ÅßÈù©Êñ∞ÁöÑ„Å™ÊäÄË°ì„ÅåÁîü„Åæ„Çå„ÇãÂèØËÉΩÊÄß„ÅåÈ´ò„ÅÑ„ÄÇ'
        };
    }
    
    // AnthropicÈñ¢ÈÄ£Ë®ò‰∫ã„ÅÆ‰∏ÄËà¨ÁöÑ„Å™ÂàÜÊûê
    if (article.category === 'anthropic') {
        return {
            keyPoints: [
                'AIÂÆâÂÖ®ÊÄßÁ†îÁ©∂„ÅÆÊúÄÂâçÁ∑ö„Åß„ÅÆÈáçË¶Å„Å™Áô∫Ë¶ã',
                'Claude„É¢„Éá„É´„ÅÆÊäÄË°ìÁöÑÈÄ≤Ê≠©„Å®‰ø°È†ºÊÄßÂêë‰∏ä',
                'Constitutional AI„Å´„Çà„Çã‰æ°ÂÄ§Ë¶≥„ÅÆÊï¥ÂêàÊÄß',
                'Ë≤¨‰ªª„ÅÇ„ÇãAIÈñãÁô∫„Å∏„ÅÆË≤¢ÁåÆ'
            ],
            impact: 'Anthropic„ÅÆAIÂÆâÂÖ®ÊÄßÁ†îÁ©∂„ÅØ„ÄÅÊ•≠ÁïåÂÖ®‰Ωì„ÅÆAIÈñãÁô∫ÊåáÈáù„Å´Â§ß„Åç„Å™ÂΩ±Èüø„Çí‰∏é„Åà„ÄÅ„Çà„ÇäÂÆâÂÖ®„Åß‰ø°È†º„Åß„Åç„ÇãAI„Ç∑„Çπ„ÉÜ„É†„ÅÆÊßãÁØâ„Å´Âêë„Åë„ÅüÈáçË¶Å„Å™Áü•Ë¶ã„ÇíÊèê‰æõ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
            technical: 'Constitutional AI„ÇÑÂº∑ÂåñÂ≠¶ÁøíÊâãÊ≥ï„ÇíÊ¥ªÁî®„Åó„ÄÅ‰∫∫Èñì„ÅÆ‰æ°ÂÄ§Ë¶≥„Å´„Çà„ÇäÈÅ©Âêà„Åó„Åü AI „Ç∑„Çπ„ÉÜ„É†„ÅÆÈñãÁô∫„ÇíÊé®ÈÄ≤„ÄÇË©≥Á¥∞„Å™Á†îÁ©∂ÂÜÖÂÆπ„Å´„Å§„ÅÑ„Å¶„ÅØÂÖÉË®ò‰∫ã„Çí„ÅîÂèÇÁÖß„Åè„Å†„Åï„ÅÑ„ÄÇ'
        };
    }
    
    // „Åù„ÅÆ‰ªñ„ÅÆË®ò‰∫ã„ÅÆ‰∏ÄËà¨ÁöÑ„Å™ÂàÜÊûê
    return {
        keyPoints: [
            'AIÊäÄË°ì„ÅÆÊúÄÊñ∞ÂãïÂêë„Å´Èñ¢„Åô„ÇãÈáçË¶Å„Å™ÊÉÖÂ†±',
            'Ê•≠Áïå„ÅÆÁô∫Â±ï„Å´ÂΩ±Èüø„Çí‰∏é„Åà„ÇãÊäÄË°ìÈù©Êñ∞',
            'ÂÆüÁî®Âåñ„Å∏„ÅÆÂÖ∑‰ΩìÁöÑ„Å™Âèñ„ÇäÁµÑ„Åø',
            '‰ªäÂæå„ÅÆÂ±ïÊúõ„Å®Ë™≤È°å'
        ],
        impact: '„Åì„ÅÆÊäÄË°ìÈù©Êñ∞„ÅØ„ÄÅAIÊ•≠Áïå„ÅÆÁô∫Â±ï„Å®Á§æ‰ºöÂÆüË£Ö„Å´„Åä„ÅÑ„Å¶ÈáçË¶Å„Å™ÊÑèÂë≥„ÇíÊåÅ„Å°„ÄÅÈñ¢ÈÄ£ÂàÜÈáé„Åß„ÅÆÊñ∞„Åü„Å™ÂèØËÉΩÊÄß„ÇíÈñãÊãì„Åô„ÇãÂ•ëÊ©ü„Å®„Å™„Çã„Åì„Å®„ÅåÊúüÂæÖ„Åï„Çå„Åæ„Åô„ÄÇ',
        technical: 'ÊúÄÊñ∞„ÅÆAIÊäÄË°ì„Å®„Ç¢„É´„Ç¥„É™„Ç∫„É†„ÇíÊ¥ªÁî®„Åó„ÅüÈù©Êñ∞ÁöÑ„Å™„Ç¢„Éó„É≠„Éº„ÉÅ„ÄÇÊäÄË°ìÁöÑ„Å™Ë©≥Á¥∞„Å´„Å§„ÅÑ„Å¶„ÅØÂÖÉË®ò‰∫ã„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ'
    };
}